/*
programador: (c) Tiago Pereira
Data: 13/12/24
observaçoes: semaforo
*/
// Constantes
const int BAUDRATE = 9600;
const int PINO_LED_VERMELHO = 13;
const int PINO_LED_AMARELO = 12;
const int PINO_LED_VERDE = 11;

const int ESTADO_INICIALIZACAO_SEMAFORO = 0;
const int ESTADO_TESTE_SEMAFORO = 1;
const int ESTADO_ACENDER_VERMELHO = 2;
const int ESTADO_ACENDER_AMARELO = 3;
const int ESTADO_ACENDER_VERDE = 4;

// Variável para armazenar o estado atual
byte estadoAtual;

// Função de configuração inicial
void setup(void) {
    Serial.begin(BAUDRATE);
    estadoAtual = ESTADO_INICIALIZACAO_SEMAFORO;

    Serial.println("Inicializando os pinos...");
    pinMode(PINO_LED_VERMELHO, OUTPUT);
    pinMode(PINO_LED_AMARELO, OUTPUT);
    pinMode(PINO_LED_VERDE, OUTPUT);

    Serial.println("Inicializacao completa.");
}
// Função principal
void loop(void) {
    switch (estadoAtual) {
        case ESTADO_INICIALIZACAO_SEMAFORO: {
            Serial.println("Estado: Inicializacao do semaforo");
            delay(2000); // Aguarda 2 segundos
            estadoAtual = ESTADO_TESTE_SEMAFORO;
            break;
        }
        case ESTADO_TESTE_SEMAFORO: {
            Serial.println("Estado: Teste do semaforo");
            digitalWrite(PINO_LED_VERMELHO, HIGH);
            digitalWrite(PINO_LED_AMARELO, HIGH);
            digitalWrite(PINO_LED_VERDE, HIGH);
            delay(5000); // LEDs acesos por 5 segundos
            digitalWrite(PINO_LED_VERMELHO, LOW);
            digitalWrite(PINO_LED_AMARELO, LOW);
            digitalWrite(PINO_LED_VERDE, LOW);
            estadoAtual = ESTADO_ACENDER_VERMELHO;
            break;
        }
        case ESTADO_ACENDER_VERMELHO: {
            Serial.println("Estado: Acender vermelho");
            digitalWrite(PINO_LED_VERMELHO, HIGH);
            digitalWrite(PINO_LED_AMARELO, LOW);
            digitalWrite(PINO_LED_VERDE, LOW);
            delay(3000); // Vermelho aceso por 3 segundos
            estadoAtual = ESTADO_ACENDER_AMARELO;
            break;
        }
case ESTADO_ACENDER_AMARELO: {
            Serial.println("Estado: Acender amarelo");
            digitalWrite(PINO_LED_VERMELHO, LOW);
            digitalWrite(PINO_LED_AMARELO, HIGH);
            digitalWrite(PINO_LED_VERDE, LOW);
            delay(5000); // Amarelo aceso por 5 segundos
            estadoAtual = ESTADO_ACENDER_VERDE;
            break;
        }
        case ESTADO_ACENDER_VERDE: {
            Serial.println("Estado: Acender verde");
            digitalWrite(PINO_LED_VERMELHO, LOW);
            digitalWrite(PINO_LED_AMARELO, LOW);
            digitalWrite(PINO_LED_VERDE, HIGH);
            delay(3000); // Verde aceso por 3 segundos
            estadoAtual = ESTADO_ACENDER_VERMELHO;
            break;
        }
        default: {
            Serial.println("Estado desconhecido! Reiniciando...");
            estadoAtual = ESTADO_INICIALIZACAO_SEMAFORO;
            break;
        }
    }
}
      
